//
//Question 2.3 task1
real alpha=1.;
real beta=2.;

// Coefficients of the homogenized tensor A*
real Astar11task1, Astar12task1, Astar21task1, Astar22task1;
string legende ;

// Definition of the domain   //
mesh Sh;

real pi=4*atan(1) ;
real theta1=0.8;
real theta2=0.4;
real theta=theta1*theta2;
real m1=(1-theta1)/(1-theta);
real m2=theta1*(1-theta2)/(1-theta1*theta2);

//  Top boundary
border a1(t=1,0) { x=t; y=1;label=1; };
// Left boundary
border a2(t=1,0)  { x=0; y=t;label=2; };
// Bottom boundary
border a3(t=0,1) { x=t; y=0;label=3; };
// Right boundary
border a4(t=0,1) { x=1; y=t;label=4; };

// Boundaries for material A
real L=1/(4-theta1);
real h=theta2;
real hmin=0.001;

//Rectangle 1 for material A
border B1(t=L,L*(1-theta1)) { x=t; y=h;label=5; };
border B2(t=h,hmin)  { x=L*(1-theta1); y=t;label=5; };
border B3(t=L*(1-theta1),L) { x=t; y=hmin;label=5; };
border B4(t=hmin,h) { x=L; y=t;label=5; };

//Rectangle 2 for material A
border B5(t=L,L*(1-theta1)) { x=t+L; y=h;label=5; };
border B6(t=h,hmin)  { x=L*(1-theta1)+L; y=t;label=5; };
border B7(t=L*(1-theta1),L) { x=t+L; y=hmin;label=5; };
border B8(t=hmin,h) { x=L+L; y=t;label=5; };

//Rectangle 3 for material A
border B9(t=L,L*(1-theta1)) { x=t+2*L; y=h;label=5; };
border B10(t=h,hmin)  { x=L*(1-theta1)+2*L; y=t;label=5; };
border B11(t=L*(1-theta1),L) { x=t+2*L; y=hmin;label=5; };
border B12(t=hmin,h) { x=3*L; y=t;label=5; };

// Mesh
int n=8;
Sh= buildmesh (a1(5*n)+a2(5*n)+a3(5*n)+a4(5*n)+B1(5*n)+B2(5*n)+B3(5*n)+B4(5*n)+B5(5*n)+B6(5*n)+B7(5*n)+B8(5*n)+B9(5*n)+B10(5*n)+B11(5*n)+B12(5*n));
plot(Sh,wait=1);

// Define FEM spaces
fespace Vh1(Sh,P1,periodic=[ [1,x],[3,x],[2,y],[4,y] ]);

// Solution variables: u1 and u2
// Test function: phi
Vh1 u1,u2,phi;

// Definition of the P0 space for the coefficient
// Furthermore we define the characteristic function
fespace Vh0(Sh,P0);
Vh0 Ay , reg=region;	// Region labels

int region1,region2,region3,region4;
region1 = reg(L*(1-theta1/2),h/2);
region2 = reg(L*(2-theta1/2),h/2);
region3 = reg(L*(3-theta1/2),h/2);
region4 = reg(0.5,0.95);

//////////////////////////////
// Definition of the coefficients for each composite
Ay = alpha*(reg==region1||reg==region2||reg==region3) + beta*(reg==region4);
plot(Sh,Ay,fill=1,wait=1,value=true);

// Defining the cell equations//
macro grad(u) [dx(u),dy(u)]//

problem cell1(u1,phi) =
    int2d(Sh)(Ay*grad(u1)'*grad(phi))
   +int2d(Sh)(Ay*dx(phi))
;

problem cell2(u2,phi) =
    int2d(Sh)(Ay*grad(u2)'*grad(phi))
   +int2d(Sh)(Ay*dy(phi))
;
cell1;
cell2;

// Compute the entries of the homogenized tensor A*
Astar11task1 = int2d(Sh)( Ay*([1,0]+grad(u1))'*([1,0]+grad(u1)) ) ;
Astar21task1 = int2d(Sh)( Ay*([1,0]+grad(u1))'*([0,1]+grad(u2)) ) ;
Astar12task1 = int2d(Sh)( Ay*([0,1]+grad(u2))'*([1,0]+grad(u1)) ) ;
Astar22task1 = int2d(Sh)( Ay*([0,1]+grad(u2))'*([0,1]+grad(u2)) ) ;


/////////////////////////////////////////
// Output and visualization            //
/////////////////////////////////////////
cout<<"Homogenized coefficients" << endl;
cout <<" Astar11_task1 = " << Astar11task1 <<endl;
cout <<" Astar12_task1 = " << Astar12task1 <<endl;
cout <<" Astar21_task1 = " << Astar21task1 <<endl;
cout <<" Astar22_task1 = " << Astar22task1 <<endl;

legende="Cell 1 problem, A11="+Astar11task1;
plot(Sh,u1,fill=1,wait=1,value=true,cmm=legende);

legende="Cell 2 problem, A22="+Astar22task1;
plot(Sh,u2,fill=1,wait=1,value=true,cmm=legende);

//Question 2.3 task2
// Using the formula from Lemma 7.14
// theta*(Astar-B)^(-1)=(A-B)^(-1)+(1-theta)((m1/B)e1xe1+(m2/B)e2xe2)
// Because the matrix A and B are multiples of the identity, we use number A (B)
// instead of the matrix A (B) here.
real A = alpha;
real B = beta;
real Astar11task2, Astar12task2, Astar21task2, Astar22task2;
Astar11task2 = (((A-B)^(-1)+(1-theta)*(m1/B))/theta)^(-1) + B;
Astar12task2 = 0;
Astar21task2 = 0;
Astar22task2 = (((A-B)^(-1)+(1-theta)*(m2/B))/theta)^(-1) + B;
cout<<"Homogenized coefficients" << endl;
cout <<" Astar11_task2 = " << Astar11task2 <<endl;
cout <<" Astar12_task2 = " << Astar12task2<<endl;
cout <<" Astar21_task2 = " << Astar21task2 <<endl;
cout <<" Astar22_task2 = " << Astar22task2 <<endl;
// The results of these two task are similar with a relative error of 2%

//Question 2.4
alpha=1.;
beta=2.;
real[int] A11list(9), A22list(9),m1list(9);
real Astar11, Astar12, Astar21, Astar22;

// partial m1/partial theta2 is always positive, so here we change theta2 to get
// the variation of m1
for (int i = 1; i<10; i++){
  theta1 = 0.5;
  theta2 = 0.1*i;
  theta = theta1*theta2;
  m1 = (1-theta1)/(1-theta);
  m2 = theta1*(1-theta2)/(1-theta1*theta2);

  L = 1/(4-theta1);
  h = theta2;
  // Mesh
  Sh = buildmesh (a1(5*n)+a2(5*n)+a3(5*n)+a4(5*n)+B1(5*n)+B2(5*n)+B3(5*n)+B4(5*n)+B5(5*n)+B6(5*n)+B7(5*n)+B8(5*n)+B9(5*n)+B10(5*n)+B11(5*n)+B12(5*n));

  Vh1 u1,u2,phi;
  Vh0 Ay , reg=region;	// Region labels

  region1 = reg(L*(1-theta1/2),h/2);
  region2 = reg(L*(2-theta1/2),h/2);
  region3 = reg(L*(3-theta1/2),h/2);
  region4 = reg(0.5,0.95);
  Ay = alpha*(reg==region1||reg==region2||reg==region3) + beta*(reg==region4);
  plot(Sh,Ay,fill=1,wait=0,value=true);

  cell1;
  cell2;

  // Compute the entries of the homogenized tensor A*
  Astar11 = int2d(Sh)( Ay*([1,0]+grad(u1))'*([1,0]+grad(u1)) ) ;
  Astar21 = int2d(Sh)( Ay*([1,0]+grad(u1))'*([0,1]+grad(u2)) ) ;
  Astar12 = int2d(Sh)( Ay*([0,1]+grad(u2))'*([1,0]+grad(u1)) ) ;
  Astar22 = int2d(Sh)( Ay*([0,1]+grad(u2))'*([0,1]+grad(u2)) ) ;
  // save m1 A11 and A22 in lists
  m1list(i-1) = m1;
  A11list(i-1) = Astar11;
  A22list(i-1) = Astar22;

}

plot([m1list,A11list],wait=1,cmm="Evoluion of cost function A*11");
plot([m1list,A22list],wait=1,cmm="Evoluion of cost function A*22");

// If alpha is smaller then beta, when m1 increase, the eigenvalues of A* decrease.
// If alpha is bigger then beta, when m1 increase, the eigenvalues of A* also increase.
// The plots seem symmetric in these two cases.
// But the value of (alpha/bete) do not influence the form of the plot in each case.
