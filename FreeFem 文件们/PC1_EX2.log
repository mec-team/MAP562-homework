-- FreeFem++ v4.400003 (jeu. 12 dÃ©c. 2019 13:58:15 - git v4.4-3-9-gc37e08e1)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : // Resolution of
    2 : // - \div(2\mu e(u))+\div(u)\Id) = f    in \Omega
    3 : //      u=0             on \Gamma_D
    4 : //      (2\mu e(u))+\div(u)\Id)n=g      on \Gamma_N
    5 :
    6 : int Nb=20;              // Nb of edges on the boundary
    7 : real lambda=1,mu=1;     // LamÃ© moduli
    8 : macro f [0,-1]          // Applied volumic loads
    9 : macro g [0,0]           // Boundary loads
   10 : macro vh() [P1,P1]      // finite element space used for displacement
   11 : macro rh() P0           // finite element space used for constraints
   12 :
   13 :
   14 : // L-beam
   15 : // use multi-border to define a polygon
   16 :
   17 : real[int] xL = [0,1,1,0.4,0.4,0];
   18 : real[int] yL = [0,0,0.4,0.4,1,1];
   19 : int[int] labelL = [0,1,2,3,4,5];
   20 : int[int] numberL = 4*[10,4,6,6,4,10];
   21 :
   22 : border Lbord(t=0,1; i){
   23 :    int nexti = (i+1)%xL.n;
   24 :    x = (1-t)*xL[i]+t*xL[nexti];
   25 :    y = (1-t)*yL[i]+t*yL[nexti];
   26 :    label = i;
   27 : }
   28 :
   29 : mesh Lbeam;
   30 : int GammaN,GammaD;
   31 : {
   32 :         GammaN=1;GammaD=2;
   33 :         int[int] labels=[0,GammaN,0,0,GammaD,0];
 *** Warning  The identifier labels hide a Global identifier
 
   34 :         Lbeam = buildmesh(Lbord(numberL));
   35 :         // construct rectangular mesh using the keyword "square"
   36 : }
   37 :
   38 : // macros allow to simplify the writing of formulas
   39 : // a macro is replaced verbatim when used in the code
   40 : // a macro always ends with  "//"
   41 :
   42 : macro u [u1,u2]//
   43 : macro v [v1,v2]//
   44 : fespace Vh(Lbeam,vh      [P1,P1]        );      // finite element space
   45 : Vh u[u1,u2],v[v1,v2];                   // state and test functions
   46 :
   47 : real sqrt2=sqrt(2.);    // define a constant when using it in a vector
   48 :                         // otherwise the code will recompute it
   49 :                         // many times
   50 :
   51 : macro e(u) [dx(u[0]),dy(u[1]),(dx(u[1])+dy(u[0]))/sqrt2] )  // symmetric gradient operator
   52 : macro div(u) (dx(u[0])+dy(u[1])) )  // divergence operator
   53 :
   54 : // state the elasticity problem using the macros
   55 : problem elasticity(u[u1,u2],v[v1,v2])=
   56 :       int2d(Lbeam)(2*mu*e(u)  [dx(u[u1,u2][0]),dy(u[u1,u2][1]),(dx(u[u1,u2][1])+dy(u[u1,u2][0]))/sqrt2]'*e(v)  [`°Ðodx(v[v1,v2][0]),dy(v[v1,v2][1]),(dx(v[v1,v2][1])+dy(v[v1,v2][0]))/sqrt2]+lambda*div(u)  (dx(u[u1,u2][0])+dy(u[u1,u2][1])`°Ðo)*div(v)  (dx(v[v1,v2][0])+dy(v[v1,v2][1])))
   57 :      -int2d(Lbeam)(f            [0,-1]          '*v[v1,v2])         // volume loads
   58 :      +int1d(Lbeam,GammaN)(g             [0,0]           '*v[v1,v2])  // surface loads
   59 :      +on(GammaD,u1=0,u2=0);   // Dirichlet boundary conditions
   60 :
   61 : elasticity;
   62 : {
   63 :         fespace Rh(Lbeam,rh              P0             );
   64 :         Rh sigma=sqrt(2.*mu*e(u)  [dx(u[u1,u2][0]),dy(u[u1,u2][1]),(dx(u[u1,u2][1])+dy(u[u1,u2][0]))/sqrt2]'*e(u`°Ðo)  [dx(u[u1,u2][0]),dy(u[u1,u2][1]),(dx(u[u1,u2][1])+dy(u[u1,u2][0]))/sqrt2]+lambda*div(u)  (dx(u[u1,u2][0])+dy(u[u1,u2]`°Ðo[1]))*div(u)  (dx(u[u1,u2][0])+dy(u[u1,u2][1])));  // constraints
   65 :         real exa=1/u1[].linfty; // exaggeration factor
   66 :         // use the command movemesh to see the deformation
   67 :         mesh Th=movemesh(Lbeam,[x+exa*u1,y+exa*u2]);
   68 :         fespace Qh(Th,rh                 P0             );
   69 :         Qh Sigma=0; Sigma[]=sigma[];
   70 :         plot(Sigma,fill=1,cmm="constraints on deformed mesh; exa="+exa);
   71 : }
   72 :  sizestack + 1024 =5544  ( 4520 )
 
  --  mesh:  Nb of Triangles =   2312, Nb of Vertices 1237
  -- Solve :
          min -1.77116  max 0.611128
times: compile 0.271s, execution 0.134s,  mpirank:0
 ######## We forget of deleting   -4 Nb pointer,   0Bytes  ,  mpirank 0, memory leak =0
 CodeAlloc : nb ptr  3751,  size :467792 mpirank: 0
Ok: Normal End
 try getConsole F:\github-clone\MAP562-homework\FreeFem ÎÄ¼þÃÇ\PC1_EX2.edp
